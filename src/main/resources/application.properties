server.port=8690


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0



#kafka producer config
kafka.producer.topic.declaration=test1,test2
spring.kafka.producer.key.serializer.class=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value.serializer.class=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.batch.size=200
spring.kafka.producer.buffer.memory=33554432
spring.kafka.producer.request.timeout.ms=30000
spring.kafka.producer.retries=0
spring.kafka.producer.linger.ms=1

#kafka consumer server
spring.kafka.consumer.servers=test1,test2
#kafka consumer config
spring.kafka.consumer.concurrency.size=1
spring.kafka.consumer.listener.topics=test1,test2
spring.kafka.consumer.session.timeout.ms=15000
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.auto.commit.interval.ms=500
spring.kafka.consumer.client.id=test-h
spring.kafka.consumer.group.id=test-h
spring.kafka.consumer.key.serializer.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value.serializer.class=org.apache.kafka.common.serialization.StringDeserializer